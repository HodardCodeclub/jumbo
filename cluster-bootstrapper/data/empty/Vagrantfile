# -*- mode: ruby -*-
# vi: set ft=ruby :

box = "centos/7"

if Vagrant::VERSION == '1.8.5'
  ui = Vagrant::UI::Colored.new
  ui.error 'Unsupported Vagrant Version: 1.8.5'
  ui.error 'Version 1.8.5 introduced an SSH key permissions bug, please upgrade to version 1.8.6+'
  ui.error ''
end

Vagrant.configure("2") do |config|
  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.vm.boot_timeout = 999999
  config.ssh.insert_key = false
  ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
  vagrant_insecure_key = File.read("#{Dir.home}/.vagrant.d/insecure_private_key")
  config.vm.box_check_update = false
  config.vm.provider :libvirt do |libvirt|
  # Don't forget to create your storage pool
    libvirt.storage_pool_name="hdp-cluster"
    libvirt.uri="qemu:///system"
  end
  config.vm.provider :virtualbox do |vb|
    config.vbguest.no_remote = true
    config.vbguest.auto_update = false
  end
  config.vm.define :master01 do |node|
    node.vm.box = box
    node.vm.network :private_network, ip: "10.10.10.11"
    node.vm.network :forwarded_port, guest: 22, host: 24011, auto_correct: true
    node.vm.provider "libvirt" do |d|
      d.memory = 4096
      d.graphics_port = 5911
    end
    node.vm.provider "virtualbox" do |d|
      d.name =  "master01.hdp.local"
      d.memory = 4096
    end
  end
  config.vm.define :master02 do |node|
    node.vm.box = box
    node.vm.network :private_network, ip: "10.10.10.12"
    node.vm.network :forwarded_port, guest: 22, host: 24012, auto_correct: true
    node.vm.provider "libvirt" do |d|
      d.memory = 4096
      d.graphics_port = 5912
    end
    node.vm.provider "virtualbox" do |d|
      d.name = "master02.hdp.local"
      d.memory = 4096
    end
  end
  config.vm.define :master03 do |node|
    node.vm.box = box
    node.vm.network :private_network, ip: "10.10.10.13"
    node.vm.network :forwarded_port, guest: 22, host: 24013, auto_correct: true
    node.vm.provider "libvirt" do |d|
      d.memory = 2048
      d.graphics_port = 5913
    end
    node.vm.provider "virtualbox" do |d|
      d.name = "master03.hdp.local"
      d.memory = 2048
    end
  end
  config.vm.define :ldap01 do |node|
    node.vm.box = box
    node.vm.network :private_network, ip: "10.10.10.14"
    node.vm.network :forwarded_port, guest: 22, host: 24014, auto_correct: true
    node.vm.provider "libvirt" do |d|
      d.memory = 1024
      d.graphics_port = 5914
    end
    node.vm.provider "virtualbox" do |d|
      d.name =  "ldap01.hdp.local"
      d.memory = 1024
    end
  end
  config.vm.define :worker01 do |node|
    node.vm.box = box
    node.vm.network :private_network, ip: "10.10.10.16"
    node.vm.network :forwarded_port, guest: 22, host: 24015, auto_correct: true
    node.vm.provider "libvirt" do |d|
      d.memory = 1792
      d.cpus = 2
      d.graphics_port = 5915
    end
    node.vm.provider "virtualbox" do |d|
      d.name = "worker01.hdp.local"
      d.customize ["modifyvm", :id, "--memory", 1792]
      d.customize ["modifyvm", :id, "--cpus", 2]
      d.customize ["modifyvm", :id, "--ioapic", "on"]
    end
  end
  config.vm.define :worker02 do |node|
    node.vm.box = box
    node.vm.network :private_network, ip: "10.10.10.17"
    node.vm.network :forwarded_port, guest: 22, host: 24016, auto_correct: true
    node.vm.provider "libvirt" do |d|
      d.memory = 1792
      d.cpus = 2
      d.graphics_port = 5916
    end
    node.vm.provider "virtualbox" do |d|
      d.name = "worker02.hdp.local"
      d.customize ["modifyvm", :id, "--memory", 1792]
      d.customize ["modifyvm", :id, "--cpus", 2]
      d.customize ["modifyvm", :id, "--ioapic", "on"]
    end
  end
  config.vm.define :edge01 do |node|
    node.vm.box = box
    node.vm.network :private_network, ip: "10.10.10.15"
    node.vm.network :forwarded_port, guest: 22, host: 24015, auto_correct: true
    node.vm.provider "libvirt" do |d|
      d.memory = 512
      d.cpus = 2
      d.graphics_port = 5917
    end
    node.vm.provider "virtualbox" do |d|
      d.name =  "edge01.hdp.local"
      d.memory = 512
    end
    node.vm.provision "Import vagrant_insecure_key", type: "shell" do |s|
      s.inline = <<-SHELL
        sudo mkdir -p /root/.ssh/
        sudo echo "#{vagrant_insecure_key}" > /root/.ssh/id_rsa
        sudo chmod 600 /root/.ssh/id_rsa
        sudo head -1 /home/vagrant/.ssh/authorized_keys > /root/.ssh/id_rsa.pub
        echo "#{vagrant_insecure_key}" > /home/vagrant/.ssh/id_rsa
        chmod 600 /home/vagrant/.ssh/id_rsa
        sudo head -1 /home/vagrant/.ssh/authorized_keys >> /root/.ssh/authorized_keys
        head -1 /home/vagrant/.ssh/authorized_keys > /home/vagrant/.ssh/id_rsa.pub
        sudo chown vagrant -R /home/vagrant/.ssh/id_rsa
      SHELL
    end
    node.vm.provision "Import ssh config", type: "file", source: "#{Dir.pwd}/ssh_config", destination: "/home/vagrant/.ssh/config"
    node.vm.provision "Copy ssh config to root", type: "shell" do |s|
      s.inline = <<-SHELL
        sudo cp /home/vagrant/.ssh/config /root/.ssh/
      SHELL
    end
    node.vm.provision "Import playbook", type: "file", source: "#{Dir.pwd}/playbooks", destination: "/home/vagrant/cluster-playbook"
    node.vm.provision "Install ansible and run playbook", type: "ansible_local" do |ansible|
      ansible.playbook = "cluster-playbook/full-deploy.yml"
      ansible.provisioning_path = "/home/vagrant/"
      ansible.inventory_path = "cluster-playbook/inventory/"
      ansible.limit = "all"
    end
  end
  config.vm.provision "Add ssh_pub_key", type: "shell" do |s|
    s.inline = <<-SHELL
      echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
      sudo mkdir -p /root/.ssh/
      sudo echo #{ssh_pub_key} >> /root/.ssh/authorized_keys
    SHELL
  end
end
